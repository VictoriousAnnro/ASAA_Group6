**-- Use cases --**

We use the example presented in the exercises/lectures (See lecture 2 - complex systems page 14 on Itslearning)

We will be working with car production. 

Assumptions:
- We assume that once a production run starts, the product is assembled solely by robots. (we want to isolate the system from human interruption, besides the control panel). There are no humans involved in the physical assembly of products.
//- We assume a single factory has multiple assembly stations (i.e. magnetic transport tracks and production cells), as well as multiple mobile robots (for delivering materials) (ask teacher)
- We assume system is modular, so it's not necessary to shut the whole system down when performing maintenance on a part of it (like hardware maintenance), or even system updates (narrowing scope)
- We assume the system might face the following challenges:
	* Hardware failure
	* Deadlocks (i.e. failed coordination in production - because of logical error in production run instructions)
	* Internet and/or electricity outage (other external factors)
	* Physical products get stuck, blocking the system
	* System is hacked
	* Messages between components are lost (communication fails)
	* Failure stemming from software updates disrupting the production run (methods might get deprecated)

-- Use cases --
Quality attributes: Usability (ease of use)
Use Case Name: Abort production run
Actors: Production Manager, Production Scheduler
Preconditions: Production is running
Steps:
1. Production Manager logs into the production software.
2. Production Manager selects the ”Manage Production Run” option.
3. Production Scheduler fetches overview of production
4. Production Manager selects the ”Stop Production Run” option.
5. Production Scheduler confirms the abort, and notifies related components
6. Components abort their current tasks, and return to default state.
Postconditions: Production run is aborted, and all affected components return to default state.

QA: "concerned with the ease which software can be made to demonstrate its fault"
Use Case Name: Check status of active production run (check alerts)
Actors: Production Manager,
Preconditions: Production is running
Steps:
1. Production Manager logs into the production software.
2. Production Mangager selects "Check status" option.
3. Production Manager fetches a status on the production and verifies it.
Postconditions: Production continues running, without interruptions.

QA: "Concerned with ease at which system supports change"
*Assumption: when doing hardware maintenance, only the relevant parts are turned off, not the whole production line.
Use Case Name: Schedule hardware maintenance
Actors: Production Manager, Production Scheduler
Preconditions: Production is running
Steps:
1. Production Manager logs into the production software.
2. Production Manager selects the ”Manage Production Run” option.
3. Production Scheduler fetches overview of production
4. Production Manager selects the ”Schedule Maintenance” option.
5. Production Scheduler confirms the date, and notifies related components.
Postconditions: Components continue running, until the scheduled maintenance date.

QA: same QA as above
Use Case Name: Schedule software update
Actors: Production Manager, Production Scheduler
Preconditions: Production is running
Steps:
1. Production Manager logs into the production software.
2. Production Manager selects the ”Manage Production Run” option.
3. Production Scheduler fetches overview of production
4. Production Manager selects the ”Schedule software update” option.
5. Production Scheduler confirms the date, and notifies related components.
Postconditions: Components continue running, until the scheduled maintenance date.

QA: "Ease at which system supports change" (and maybe "how easy it is for user to accomplish task")
Use Case Name: Re-Schedule Production Run
Actors: Production Manager, Production Scheduler
Preconditions: The production order exists and has been verified, and has already been scheduled in the system
Steps:
1. Production Manager logs into the production software.
2. Production Manager selects the ”Manage Production Run” option.
3. Production Manager selects the ”Re-Schedule Production Run” option.
4. Production Scheduler fetches the scheduled production runs, available timeslots and resources.
5. Production Manager moves the scheduled production run to an available timeslot
6. Production Scheduler confirms the schedule and notifies related components.
Postconditions: The production run is re-scheduled, and all affected components are notified.

QA: "protect data/information from people without authorization", "system supports change", "how easy is it for user to accomplish task"
Use Case Name: Create new production run 
Actors: Production Manager, (Production Verifier)
Preconditions: The production order does not exists in the system
Steps:
1. Production Manager logs into the production software.
2. Production Manager selects the ”Create new Production Order” option.
3. The system displayes the configurable components (such as the drones, robot arms, etc). 
4. Production Manager configueres each component, to set up the production order, and selects resources
5. The production verifier verifies the steps and specified resources of the production order
6. Production Manager confirms the order, which is then saved in the system
Postconditions: A new production order has been verified and exists in system

QA: "Avoid straying into states that lead to damage/death", "easy for user to accomplish task", "operational when needed"
Use Case Name: Manually execute production run
Actors: Production Manager, Production Scheduler
Preconditions: The specified production order exists and is verified & no production run is currently running
Steps:
1. Production Manager logs into the production software.
2. Production Manager selects the ”Manage Production Run” option.
3. Production Manager selects the ”Run Production Run now” option.
4. Production Scheduler fetches saved production orders
5. Production Manager selects the desired Production Order
6. Production Scheduler checks there are enough resources (raw materials) to fulfill the Production Order.
7. Production Scheduler verifies that the affected components are available for the required time.
8. Production Scheduler confirms the run and notifies related components.
Postconditions: A new production order is running


teachers example: We produce this product in three variations - we would like to change these variations. 
availability: my system should be available 99.9999% of the time. What system might be affected by this, and how can i create a use case that tests this?
fx netflixed tested availability by randomly killing processes in the netflix system - to check if the system could survive. 
Think of something where you can create a scenario where you can test it automatically. 
